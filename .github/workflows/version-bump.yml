name: Release on package.json version change

on:
  push:
    branches:
      - dev
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  tag-and-release:
    name: Tag and create release if version changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect version change in package.json
        id: version
        shell: bash
        run: |
          set -euo pipefail
          # If package.json wasn't changed in the last commit, skip
          if ! git diff --name-only HEAD^ HEAD | grep -q '^package.json$'; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          NEW_VERSION=$(jq -r .version package.json)

          if git show HEAD^:package.json > /tmp/prev_package.json 2>/dev/null; then
            OLD_VERSION=$(jq -r .version /tmp/prev_package.json)
          else
            OLD_VERSION=""
          fi

          if [ "$NEW_VERSION" = "$OLD_VERSION" ] || [ -z "$NEW_VERSION" ] || [ "$NEW_VERSION" = "null" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "changed=true" >> "$GITHUB_OUTPUT"
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Create and push tag
        if: steps.version.outputs.changed == 'true'
        shell: bash
        run: |
          set -euo pipefail
          TAG="v${{ steps.version.outputs.new_version }}"
          # Skip if tag already exists on origin
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
            echo "Tag $TAG already exists. Skipping push."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

      - name: Create GitHub Release
        if: steps.version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: v${{ steps.version.outputs.new_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}


