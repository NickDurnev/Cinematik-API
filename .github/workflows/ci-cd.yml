name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Loading NVM..."
            export NVM_DIR="$HOME/.nvm"
            source "$NVM_DIR/nvm.sh"
            nvm use 22.14.0 

            cd Cinematik-API

            echo "Resetting repository to avoid conflicts..."
            git reset --hard HEAD
            git clean -fd
            git pull https://${{ secrets.USERNAME }}:${{ secrets.TOKEN }}@github.com/${{ secrets.USERNAME }}/Cinematik-API.git main            

            echo "Updating environment variables..."
            cat <<EOF > .env
            PORT=${{ secrets.PORT }}
            STAGE=prod
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            CLIENT_APP_BASE_URL=${{ secrets.CLIENT_APP_BASE_URL }}
            NODE_ENV=production
            EOF

            echo "Cleaning old build..."
            rm -rf dist

            echo "Installing dependencies..."
            npm install --production
            npm install --save-dev @types/express @types/node @types/uuid

            echo "Building the application..."
            npm run build

            echo "Running database migrations..."
            npm run db:migrate-prod

            echo "Restarting application..."
            pm2 delete cinematik-api || true
            pm2 start dist/src/main.js --name cinematik-api --env production
            pm2 save
